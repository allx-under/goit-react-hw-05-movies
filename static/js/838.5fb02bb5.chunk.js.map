{"version":3,"file":"static/js/838.5fb02bb5.chunk.js","mappings":"wOA8CA,UAxCqB,WACnB,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,sGAEtBJ,GAAW,GAFW,UAGIK,EAAAA,EAAAA,IAAgBJ,GAHpB,gBAGdK,EAHc,EAGdA,QACRR,EAAWQ,GAJW,gDAMtBC,QAAQC,IAAR,MANsB,yBAQtBR,GAAW,GARW,4EAAH,qDAWvBI,GACD,GAAE,CAACH,IAEAF,GACK,SAAC,IAAD,IAEc,IAAnBF,EAAQY,QACH,oDAELZ,GAEA,wBACGA,EAAQa,KAAI,gBAAGT,EAAH,EAAGA,GAAIU,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,qCAAaD,MACb,uBAAIC,MAFGX,EADE,WAHnB,CAYD,C,4MC1CKY,EAAU,mCAEHC,EAAc,mCAAG,sGACLC,IAAAA,IAAA,oEACiCF,IAF5B,uBACpBG,EADoB,EACpBA,KADoB,kBAGrBA,GAHqB,2CAAH,qDAMdC,EAAe,mCAAG,WAAMC,GAAN,yFACNH,IAAAA,IAAA,0DAC8BG,EAD9B,oBAC+CL,EAD/C,+CADM,uBACrBG,EADqB,EACrBA,KADqB,kBAKtBA,GALsB,2CAAH,sDAQfG,EAAY,mCAAG,WAAMlB,GAAN,yFACHc,IAAAA,IAAA,6CACiBd,EADjB,oBAC+BY,EAD/B,oBADG,uBAClBG,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,sDAOZI,EAAe,mCAAG,WAAMnB,GAAN,yFACNc,IAAAA,IAAA,6CACiBd,EADjB,4BACuCY,EADvC,oBADM,uBACrBG,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfX,EAAe,mCAAG,WAAMJ,GAAN,yFACNc,IAAAA,IAAA,6CACiBd,EADjB,4BACuCY,EADvC,oBADM,uBACrBG,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,qD,kECrB5B,IARe,WACb,OACE,SAACK,EAAD,WACE,SAAC,KAAD,CAAMC,OAAO,MAAMC,MAAM,MAAMC,MAAM,WAG1C,EAID,IAAMH,EAAUI,EAAAA,GAAAA,IAAH,yO","sources":["components/MovieReviews/MovieReviews.jsx","service/API.js","service/Loader.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieReviews } from 'service/API';\nimport Loader from 'service/Loader';\n\nconst MovieReviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        setLoading(true);\n        const { results } = await getMovieReviews(id);\n        setReviews(results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovieReviews();\n  }, [id]);\n\n  if (loading) {\n    return <Loader />;\n  }\n  if (reviews.length === 0) {\n    return <h3>There is no reviews yet</h3>;\n  }\n  if (reviews) {\n    return (\n      <ul>\n        {reviews.map(({ id, author, content }) => (\n          <li key={id}>\n            <h3>Author: {author}</h3>\n            <p>{content}</p>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n};\n\nexport default MovieReviews;\n","import axios from 'axios';\n\nconst API_KEY = '6fa4e59bc2ff4c4e723c5e57b4e6f0ea';\n\nexport const getTrendMovies = async () => {\n  const { data } = await axios.get(`\nhttps://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMoviesByName = async query => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const getMovieInfo = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n","import { Puff } from 'react-loader-spinner';\nimport styled from 'styled-components';\n\nconst Loader = () => {\n  return (\n    <Wrapper>\n      <Puff height=\"100\" width=\"100\" color=\"black\" />\n    </Wrapper>\n  );\n};\n\nexport default Loader;\n\nconst Wrapper = styled.div`\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n  background-color: rgba(0, 0, 0, 0.4);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n"],"names":["useState","reviews","setReviews","loading","setLoading","id","useParams","useEffect","fetchMovieReviews","getMovieReviews","results","console","log","length","map","author","content","API_KEY","getTrendMovies","axios","data","getMoviesByName","query","getMovieInfo","getMovieCredits","Wrapper","height","width","color","styled"],"sourceRoot":""}