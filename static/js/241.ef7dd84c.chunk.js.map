{"version":3,"file":"static/js/241.ef7dd84c.chunk.js","mappings":"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","sources":["pages/MovieInfoPage.jsx","service/API.js","service/Loader.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Link,\n  Outlet,\n  useLocation,\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { getMovieInfo } from 'service/API';\nimport Loader from 'service/Loader';\n\nconst MovieInfoPage = () => {\n  const [movie, setMovie] = useState({});\n  const [loading, setLoading] = useState(false);\n  const { id } = useParams();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const from = location.state?.from || '/movies';\n\n  const goBack = () => {\n    navigate(from);\n  };\n\n  useEffect(() => {\n    const fetchMovieInfo = async () => {\n      try {\n        setLoading(true);\n        const data = await getMovieInfo(id);\n        setMovie(data);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n      //   setMovie(data)\n    };\n\n    fetchMovieInfo();\n  }, [id]);\n  const {\n    genres,\n    original_title,\n    overview,\n    popularity,\n    poster_path,\n    release_date,\n  } = movie;\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  return (\n    <>\n      <StyledBtn onClick={goBack} type=\"button\">\n        Go Back\n      </StyledBtn>\n      <Wrapper>\n        {poster_path && (\n          <StyledImg\n            src={`https://image.tmdb.org/t/p/original/${poster_path}`}\n            alt={original_title}\n            width=\"300px\"\n          />\n        )}\n        <div>\n          <h2>\n            {original_title} ({release_date?.slice(0, 4)})\n          </h2>\n          <p>\n            <b>Overview:</b> {overview}\n          </p>\n          <b>Genres:</b>\n          <ul>\n            {genres?.map(genre => (\n              <li key={genre.name}>{genre.name}</li>\n            ))}\n          </ul>\n          <p>\n            <b>Rate:</b> {popularity?.toFixed(1)}\n          </p>\n          <h3>Additional information</h3>\n          <ul>\n            <li>\n              <Link state={{ from }} to=\"cast\">\n                Cast\n              </Link>\n            </li>\n            <li>\n              {' '}\n              <Link state={{ from }} to=\"reviews\">\n                Reviews\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </Wrapper>\n      <hr />\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieInfoPage;\n\nconst Wrapper = styled.div`\n  display: flex;\n`;\n\nconst StyledImg = styled.img`\n  border-radius: 10px;\n  margin: 10px;\n  margin-right: 20px;\n`;\n\nconst StyledBtn = styled.button`\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  margin: 0;\n  margin-left: 10px;\n  margin-top: 5px;\n  padding: 5px;\n  color: white;\n  background: rgba(0, 0, 0, 0.6);\n  &:hover {\n    color: black;\n    background: linear-gradient(to bottom, #e8edec, #d2d1d3);\n  }\n`;\n","import axios from 'axios';\n\nconst API_KEY = '6fa4e59bc2ff4c4e723c5e57b4e6f0ea';\n\nexport const getTrendMovies = async () => {\n  const { data } = await axios.get(`\nhttps://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMoviesByName = async query => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const getMovieInfo = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n","import { Puff } from 'react-loader-spinner';\nimport styled from 'styled-components';\n\nconst Loader = () => {\n  return (\n    <Wrapper>\n      <Puff height=\"100\" width=\"100\" color=\"black\" />\n    </Wrapper>\n  );\n};\n\nexport default Loader;\n\nconst Wrapper = styled.div`\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n  background-color: rgba(0, 0, 0, 0.4);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n"],"names":["useState","movie","setMovie","loading","setLoading","id","useParams","navigate","useNavigate","from","useLocation","state","useEffect","fetchMovieInfo","getMovieInfo","data","console","log","genres","original_title","overview","popularity","poster_path","release_date","StyledBtn","onClick","type","Wrapper","StyledImg","src","alt","width","slice","map","genre","name","toFixed","to","styled","API_KEY","getTrendMovies","axios","getMoviesByName","query","getMovieCredits","getMovieReviews","height","color"],"sourceRoot":""}